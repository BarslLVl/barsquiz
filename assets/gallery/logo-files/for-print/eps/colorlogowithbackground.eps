%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 22.05.0 (http://poppler.freedesktop.org)
%%Creator: Chromium
%%LanguageLevel: 3
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 2386 552
%%HiResBoundingBox: 0 0 2385.1199 552
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011, 2022 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfOPM false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/opm { dup /pdfOPM exch def
      /setoverprintmode where{pop setoverprintmode}{pop}ifelse  } def
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16L3 {
  1 index /CIDFont resourcestatus {
    pop pop 1 index /CIDFont findresource /CIDFontType known
  } {
    false
  } ifelse
  {
    0 eq { /Identity-H } { /Identity-V } ifelse
    exch 1 array astore composefont pop
  } {
    pdfMakeFont16
  } ifelse
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
  /pdfOPM where {
    pop
    pdfOPM /setoverprintmode where{pop setoverprintmode}{pop}ifelse 
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfMask {
  /ReusableStreamDecode filter
  skipEOD
  /maskStream exch def
} def
/pdfMaskEnd { maskStream closefile } def
/pdfMaskInit {
  /maskArray exch def
  /maskIdx 0 def
} def
/pdfMaskSrc {
  maskIdx maskArray length lt {
    maskArray maskIdx get
    /maskIdx maskIdx 1 add def
  } {
    ()
  } ifelse
} def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
/CIDInit /ProcSet findresource begin
10 dict begin
  begincmap
  /CMapType 1 def
  /CMapName /Identity-H def
  /CIDSystemInfo 3 dict dup begin
    /Registry (Adobe) def
    /Ordering (Identity) def
    /Supplement 0 def
  end def
  1 begincodespacerange
    <0000> <ffff>
  endcodespacerange
  0 usefont
  1 begincidrange
    <0000> <ffff> 0
  endcidrange
  endcmap
  currentdict CMapName exch /CMap defineresource pop
end
10 dict begin
  begincmap
  /CMapType 1 def
  /CMapName /Identity-V def
  /CIDSystemInfo 3 dict dup begin
    /Registry (Adobe) def
    /Ordering (Identity) def
    /Supplement 0 def
  end def
  /WMode 1 def
  1 begincodespacerange
    <0000> <ffff>
  endcodespacerange
  0 usefont
  1 begincidrange
    <0000> <ffff> 0
  endcidrange
  endcmap
  currentdict CMapName exch /CMap defineresource pop
end
end
%%EndProlog
%%BeginSetup
xpdf begin
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 2385.1199 552 re
W
q
[0.24 0 0 -0.24 0 552] cm
q
0 0 9934.375 2296.875 re
W*
q
[3.124886 0 0 3.124049 0.0178537 0] cm
/DeviceRGB {} CS
[1 1 1] SC
/DeviceRGB {} cs
[1 1 1] sc
0 0 3179.1045 735.22388 re
f
Q
q
[25.18565 0 0 25.178898 279.8584 279.76553] cm
10 0 m
118 0 l
118.327515 0 118.654236 0.016051 118.980171 0.048153 c
119.306107 0.080255 119.629677 0.128253 119.950897 0.192147 c
120.272118 0.256042 120.589432 0.335525 120.902847 0.430597 c
121.216248 0.525668 121.524239 0.635871 121.826813 0.761205 c
122.129402 0.886538 122.425117 1.026399 122.713959 1.180787 c
123.0028 1.335175 123.283371 1.503348 123.555679 1.685304 c
123.828003 1.86726 124.090752 2.062124 124.343925 2.269896 c
124.597099 2.477667 124.839478 2.697346 125.07106 2.928932 c
125.30265 3.160518 125.522331 3.402896 125.730103 3.656067 c
125.937874 3.909237 126.132729 4.171981 126.314682 4.444297 c
126.496643 4.716614 126.664818 4.997192 126.819199 5.286032 c
126.973595 5.574872 127.113457 5.870583 127.238785 6.173165 c
127.364128 6.475747 127.474327 6.783743 127.569397 7.097153 c
127.664467 7.410563 127.74395 7.727877 127.807838 8.049096 c
127.871735 8.370316 127.919739 8.693893 127.951843 9.019829 c
127.983948 9.345764 128 9.672488 128 10 c
128 59 l
128 59.327511 127.983948 59.654236 127.951843 59.980167 c
127.919739 60.306103 127.871735 60.629681 127.807831 60.950897 c
127.74395 61.272121 127.664474 61.589436 127.569405 61.902847 c
127.474335 62.216255 127.364128 62.524246 127.238785 62.826824 c
127.113457 63.12941 126.973595 63.425125 126.819214 63.713963 c
126.664818 64.002808 126.496643 64.283379 126.314682 64.555695 c
126.132729 64.828011 125.937874 65.090759 125.730103 65.343925 c
125.522331 65.597099 125.30265 65.839478 125.07106 66.07106 c
124.839478 66.30265 124.597099 66.522324 124.343933 66.730095 c
124.090752 66.937866 123.828003 67.132729 123.555687 67.314682 c
123.283379 67.496635 123.0028 67.66481 122.713959 67.819206 c
122.425117 67.973595 122.12941 68.113457 121.82682 68.238785 c
121.524246 68.36412 121.216255 68.474327 120.902847 68.569397 c
120.589432 68.664467 120.272118 68.743958 119.950897 68.807854 c
119.629677 68.87175 119.306107 68.919746 118.980179 68.951851 c
118.654243 68.983948 118.327515 69 118 69 c
10 69 l
9.672488 69 9.345764 68.983948 9.019829 68.951843 c
8.693893 68.919746 8.370316 68.871742 8.049096 68.807846 c
7.727877 68.74395 7.410563 68.664467 7.097153 68.569397 c
6.783743 68.474327 6.475747 68.36412 6.173165 68.238777 c
5.870583 68.113449 5.574873 67.973587 5.286033 67.819206 c
4.997192 67.66481 4.716614 67.496635 4.444297 67.314682 c
4.171981 67.132729 3.909237 66.937866 3.656067 66.730095 c
3.402896 66.522324 3.160518 66.30265 2.928932 66.07106 c
2.697346 65.839478 2.477667 65.597099 2.269896 65.343925 c
2.062124 65.090759 1.86726 64.828011 1.685304 64.555695 c
1.503348 64.283379 1.335176 64.002808 1.180787 63.713963 c
1.026399 63.425125 0.886538 63.12941 0.761205 62.826824 c
0.635871 62.524246 0.525668 62.216255 0.430597 61.902843 c
0.335525 61.589436 0.256042 61.272121 0.192147 60.950897 c
0.128253 60.629681 0.080255 60.306103 0.048153 59.980167 c
0.016051 59.654236 0 59.327511 0 59 c
0 10 l
0 9.672488 0.016051 9.345764 0.048153 9.019829 c
0.080255 8.693893 0.128253 8.370316 0.192147 8.049096 c
0.256042 7.727877 0.335525 7.410563 0.430597 7.097153 c
0.525668 6.783743 0.635871 6.475747 0.761205 6.173165 c
0.886538 5.870583 1.026399 5.574873 1.180787 5.286033 c
1.335175 4.997192 1.503348 4.716614 1.685304 4.444297 c
1.86726 4.171981 2.062124 3.909237 2.269896 3.656067 c
2.477667 3.402896 2.697346 3.160518 2.928932 2.928932 c
3.160518 2.697346 3.402896 2.477667 3.656067 2.269896 c
3.909237 2.062124 4.171981 1.86726 4.444297 1.685304 c
4.716614 1.503348 4.997192 1.335176 5.286032 1.180787 c
5.574872 1.026399 5.870583 0.886538 6.173165 0.761205 c
6.475747 0.635871 6.783743 0.525668 7.097153 0.430597 c
7.410563 0.335525 7.727877 0.256042 8.049096 0.192147 c
8.370316 0.128253 8.693893 0.080255 9.019829 0.048153 c
9.345764 0.016051 9.672488 0 10 0 c
h
f
Q
q
[17.032312 0 0 17.027746 620.47284 449.76416] cm
/DeviceRGB {} CS
[1 1 1] SC
/DeviceRGB {} cs
[1 1 1] sc
39.223 43.155998 m
40.119759 44.798298 40.8386 46.959499 40.682201 49.319798 c
40.576672 51.663799 39.5159 53.846996 38.1964 55.364197 c
36.864899 56.858997 35.398598 57.761597 34.021301 58.402897 c
32.636402 59.026417 31.294102 59.401417 29.970802 59.648697 c
29.312302 59.771336 28.643702 59.855888 27.998602 59.911198 c
27.388462 59.951862 26.781502 59.986839 26.175102 59.99194 c
21.329502 60.063778 16.626701 58.958538 12.487103 56.867538 c
12.304703 56.768402 12.174393 56.626659 12.068863 56.465878 c
11.390683 56.299999 10.878363 56.064217 10.786863 55.772457 c
9.530963 46.924255 7.527663 38.332458 4.855063 30.116457 c
4.842349 30.108839 4.828344 30.101221 4.81563 30.09296 c
3.44853 29.23436 2.72013 28.27776 3.10723 27.718559 c
4.06567 26.097858 5.156929 24.843859 6.28883 23.772959 c
7.42523 22.706558 8.61373 21.828159 9.86323 21.073059 c
11.11403 20.320539 12.42523 19.692558 13.84073 19.19306 c
14.92503 18.84601 l
16.058229 18.5562 l
16.45163 18.473585 16.851429 18.40052 17.246729 18.331261 c
18.174028 18.223211 l
19.403828 18.099932 20.650829 18.047192 21.930229 18.082762 c
22.252439 18.096121 22.565809 18.09864 22.895689 18.127235 c
23.927889 18.211788 l
24.769388 18.289309 25.598188 18.415169 26.410488 18.584208 c
29.662689 19.257948 32.572487 20.797308 34.656887 23.034508 c
35.104958 23.560148 l
35.517456 24.112457 l
35.790085 24.481077 36.065956 24.843977 36.279514 25.250156 c
36.506393 25.646776 36.732674 26.039576 36.901054 26.463556 c
37.084743 26.878576 37.260826 27.294256 37.378426 27.732756 c
37.912914 29.458355 38.059727 31.278656 37.853855 33.043556 c
37.612335 35.135258 36.869976 37.140457 35.761555 38.892155 c
35.841007 38.963345 35.925556 39.027565 36.003075 39.100636 c
37.196674 40.198936 38.307674 41.491737 39.222874 43.156235 c
39.223 43.155998 l
h
22.660999 31.761999 m
22.15317 31.879599 21.626999 32.03463 21.101999 32.21323 c
21.072117 32.467468 21.037781 32.719769 21.006666 32.97403 c
23.107866 33.199669 25.123966 33.640751 27.111666 34.26363 c
27.138971 33.911541 27.11483 33.567688 27.039186 33.249931 c
26.840906 32.367752 26.211666 31.680031 25.473686 31.442331 c
24.867386 31.236431 24.258486 31.295551 23.802187 31.451881 c
23.686527 31.491316 23.579767 31.537075 23.481266 31.586651 c
23.431051 31.612082 23.233995 31.642609 23.104336 31.667393 c
22.963886 31.687725 22.808146 31.73155 22.661306 31.762079 c
22.660999 31.761999 l
h
29.240999 49.751999 m
29.37958 49.63253 29.486448 49.515747 29.57733 49.403889 c
29.494068 49.433773 29.41655 49.465527 29.314829 49.503674 c
29.225824 49.53672 l
29.213755 49.539238 l
29.194712 49.544334 l
29.159145 49.544334 29.125454 49.534138 29.075882 49.51252 c
28.887741 49.424156 28.548952 49.202332 28.121222 49.019279 c
27.697302 48.816551 27.256201 48.715469 26.658821 48.557861 c
26.06204 48.414253 25.369921 48.30872 24.668821 48.22739 c
23.236221 48.102821 21.699522 48.109791 20.313221 48.35067 c
19.611582 48.446648 18.976622 48.634789 18.402121 48.815319 c
18.360168 48.82991 18.323959 48.846432 18.283941 48.861668 c
18.044941 49.933167 17.793861 50.999069 17.534542 52.061768 c
20.160042 52.342667 22.793242 52.165947 25.236141 51.551998 c
25.658772 51.450916 26.073141 51.325706 26.483742 51.20179 c
26.856161 51.075932 27.200022 50.9431 27.537542 50.788651 c
28.206783 50.48484 28.809341 50.118752 29.240843 49.752052 c
29.240999 49.751999 l
h
88.132004 51.667801 m
88.617577 51.653797 77.925003 65.471802 77.682007 64.878799 c
76.12101 62.7052 74.828903 60.580399 73.62011 58.5014 c
72.572006 58.850319 71.491508 59.114719 70.38501 59.278702 c
68.848213 59.488472 67.250412 59.527901 65.715408 59.338528 c
64.183105 59.138958 62.70031 58.765888 61.304607 58.228828 c
59.917206 57.675228 58.612309 56.981827 57.404106 56.16703 c
56.209206 55.333149 55.111607 54.38493 54.120705 53.337532 c
53.146366 52.271633 52.285805 51.107231 51.552906 49.859631 c
50.835968 48.599232 50.265205 47.248032 49.851505 45.847931 c
49.456177 44.447731 49.249645 43.022831 49.182266 41.611832 c
49.154316 40.900593 49.171486 40.19453 49.226154 39.494732 c
48.554935 39.369522 47.969654 39.136253 47.537453 38.765732 c
47.004192 38.32909 46.683231 37.721531 46.688332 37.001331 c
46.616493 34.802231 46.999111 32.603832 47.796131 30.575331 c
48.00906 30.074471 48.22134 29.571732 48.467953 29.08803 c
48.720901 28.620279 48.989082 28.102289 49.259834 27.69623 c
49.802006 26.843269 50.373936 26.08563 50.961235 25.413231 c
52.138935 24.056931 53.359837 22.989132 54.559235 22.074532 c
55.079784 21.674101 55.948635 21.052532 56.751335 20.585432 c
57.567455 20.104322 58.410236 19.700071 59.264435 19.349833 c
62.693935 17.973833 66.309631 17.640833 69.813431 18.217232 c
71.565727 18.510851 73.295731 19.046612 74.93943 19.842432 c
75.350639 20.039482 75.757408 20.245382 76.15213 20.487553 c
76.549339 20.720812 76.949112 20.957882 77.305031 21.212772 c
78.037872 21.714212 78.719833 22.261372 79.34713 22.838572 c
81.872932 25.158371 83.557129 27.854471 84.733528 30.560572 c
85.896629 33.268173 86.636429 36.180973 86.780624 39.270172 c
86.911583 42.352772 86.404396 45.626572 84.933022 48.654171 c
84.680069 49.179173 84.39724 49.679371 84.101059 50.16877 c
85.48156 50.74017 86.832161 51.256271 88.132462 51.66687 c
88.132004 51.667801 l
h
66.568001 49.139 m
67.157814 49.137066 67.710197 49.048706 68.270103 48.919041 c
68.682602 47.771141 71.127007 44.707741 71.7836 44.814541 c
72.267288 45.002682 72.743301 45.201611 73.221298 45.398663 c
73.553055 44.886372 73.811111 44.356361 73.975075 43.833263 c
74.306198 42.825863 74.372925 41.596062 74.153671 40.293064 c
73.928032 38.986965 73.417053 37.601364 72.681068 36.334663 c
71.953987 35.076263 71.05397 34.084164 70.222069 33.535664 c
70.015526 33.393925 69.81279 33.280132 69.615166 33.191135 c
69.514732 33.135822 69.425735 33.118008 69.340538 33.084965 c
69.260437 33.046177 69.165108 33.0252 69.071655 33.001701 c
68.703033 32.90062 68.289314 32.8428 67.859055 32.843441 c
66.999794 32.838345 66.080154 33.09 65.475052 33.499359 c
65.32634 33.602959 65.187759 33.703381 65.072739 33.812069 c
64.946236 33.934757 64.925896 33.969097 64.60112 34.2742 c
64.100906 34.759121 63.722118 35.223099 63.510422 35.577801 c
63.397923 35.755753 63.339443 35.90575 63.315311 35.997272 c
63.286072 36.054459 63.337578 36.045555 63.327381 36.061432 c
63.336288 36.073502 63.359783 36.089382 63.357265 36.094479 c
63.407482 36.137077 63.470406 36.157406 63.529537 36.153599 c
63.561939 36.150436 63.324226 36.16444 62.892036 36.257248 c
62.443325 36.346252 61.811535 36.524849 61.063438 36.775276 c
59.994438 37.121037 58.673038 37.615517 57.269138 38.101078 c
57.075897 39.898479 57.281796 41.686378 57.924999 43.195877 c
59.042297 45.947277 61.745399 48.197277 64.529198 48.881676 c
65.221359 49.053295 65.907799 49.128296 66.5681 49.139076 c
66.568001 49.139 l
h
135.298996 53.867401 m
138.621796 54.12352 138.787399 59.2397 135.192596 59.577801 c
132.600098 59.680752 130.010803 59.696632 127.440598 59.668682 c
123.5998 59.604465 l
121.691803 59.561222 l
118.973404 59.453171 l
115.289604 59.297432 111.424805 59.235142 107.182404 59.315239 c
102.974907 59.372425 98.508804 59.462658 94.141403 59.594849 c
94.156639 59.554184 94.149017 59.523071 94.183357 59.474148 c
94.328255 59.308918 l
94.618706 58.977158 l
95.202187 58.310436 l
96.380585 56.964935 l
98.814781 54.174133 l
103.87648 48.340832 l
105.575981 46.361031 107.234177 44.355732 108.859978 42.30183 c
111.301277 39.178631 l
111.608246 38.783302 l
111.859909 38.452183 l
112.213928 37.969131 l
112.922646 37.002472 l
113.279182 36.516262 l
113.359283 36.410141 113.336426 36.427959 113.362503 36.387943 c
113.407623 36.305973 l
113.579895 35.987572 l
113.887505 35.399052 l
114.076294 35.027863 114.232613 34.699932 114.357193 34.41457 c
114.604462 33.8451 114.733482 33.44659 114.71315 33.220371 c
113.356148 33.51973 112.392647 33.75996 111.82515 34.011051 c
111.683411 34.073338 111.56646 34.136261 111.473648 34.199192 c
111.427238 34.230366 111.387222 34.262119 111.353539 34.293877 c
111.344635 34.301495 111.340179 34.309757 111.333847 34.317371 c
111.325584 34.329441 l
111.31926 34.331375 111.335136 34.333309 111.309708 34.335243 c
111.209923 34.340984 l
110.417381 34.38739 l
108.309181 34.514481 106.239784 34.665119 104.214584 34.87167 c
101.901688 35.290501 100.746185 17.85367 103.577744 18.04067 c
105.898842 18.078171 108.179947 18.18177 110.420746 18.3095 c
111.259064 18.35907 l
112.746262 18.414383 l
115.885361 18.540882 l
117.96936 18.621624 120.015961 18.715672 122.079163 18.763363 c
126.163361 18.890453 130.461166 18.770336 134.675156 18.723286 c
146.766159 18.563736 l
133.148163 32.180737 l
129.974167 35.420937 l
128.944565 36.486835 127.994965 37.532337 127.016167 38.573437 c
121.806366 44.349537 l
120.572662 45.674736 l
120.477325 45.775818 l
120.441116 45.805702 l
120.363594 45.871151 l
119.713371 46.431721 l
118.243271 47.725121 l
116.533569 49.235222 l
115.584007 50.066521 l
115.083794 50.5 l
114.828262 50.72184 l
114.699242 50.834339 l
114.634438 50.890881 l
114.626823 50.90424 114.660515 50.899143 114.671295 50.90424 c
116.324394 51.15913 118.508194 51.593819 121.219696 52.117538 c
122.284897 52.31646 l
124.159798 52.58025 l
127.8881 53.08234 l
130.366196 53.401379 132.832199 53.675312 135.299301 53.86726 c
135.298996 53.867401 l
h
f
Q
q
[35.301201 0 0 35.291737 4001.209 247.9646] cm
23.01 20.688 m
23.01 22.631199 22.355921 24.4958 21.194201 25.999599 c
22.356201 27.503599 23.0103 29.368099 23.0103 31.311199 c
23.0103 36.101997 19.1129 39.999599 14.321899 39.999599 c
12.0594 39.999599 l
11.476879 39.999599 10.9183 39.768188 10.506499 39.356438 c
2.243699 31.093637 l
1.385859 30.236078 1.386139 28.845638 2.243699 27.988037 c
3.101259 27.130436 4.491699 27.130478 5.349299 27.988037 c
12.968899 35.607635 l
14.321699 35.607635 l
16.690498 35.607635 18.617699 33.680237 18.617699 31.311636 c
18.617699 29.916037 17.933899 28.602036 16.788698 27.796036 c
16.204018 27.384836 15.856178 26.714735 15.856178 25.999935 c
15.856178 25.285135 16.203989 24.615036 16.788698 24.203835 c
17.933899 23.398155 18.617699 22.083836 18.617699 20.688234 c
18.617699 18.319435 16.690298 16.392235 14.321699 16.392235 c
5.992799 16.392235 l
5.992799 20.369034 l
13.611999 27.988634 l
14.469839 28.846193 14.469839 30.236633 13.611999 31.094234 c
12.754438 31.952074 11.363998 31.952074 10.506398 31.094234 c
2.243598 22.831434 l
1.831838 22.419674 1.600438 21.861034 1.600438 21.278534 c
1.600438 14.196135 l
1.600438 12.983335 2.583718 12.000135 3.796438 12.000135 c
14.321438 12.000135 l
19.112238 12.000135 23.009838 15.897534 23.009838 20.688534 c
23.01 20.688 l
h
43.056 19.412001 m
44.268799 19.412001 45.251999 20.395281 45.251999 21.608002 c
45.251999 37.804001 l
45.251999 39.0168 44.268719 40 43.056 40 c
41.948898 40 41.0359 39.180321 40.884399 38.115002 c
39.207397 39.300602 37.163399 40 34.958 40 c
29.281601 40 24.664001 35.382401 24.664001 29.706001 c
24.664001 24.029602 29.281601 19.412003 34.958 19.412003 c
37.163399 19.412003 39.207199 20.111443 40.884399 21.297003 c
41.035919 20.231604 41.948898 19.412003 43.056 19.412003 c
43.056 19.412001 l
h
34.958 35.608002 m
38.212299 35.608002 40.860001 32.960403 40.860001 29.706001 c
40.860001 26.451599 38.212402 23.804001 34.958 23.804001 c
31.703598 23.804001 29.056 26.451601 29.056 29.706001 c
29.056 32.960403 31.7036 35.608002 34.958 35.608002 c
h
57.222 19.412001 m
58.434799 19.412001 59.417999 20.395281 59.417999 21.608002 c
59.417999 22.820723 58.434719 23.804001 57.222 23.804001 c
53.967701 23.804001 51.32 26.451601 51.32 29.706001 c
51.32 37.804001 l
51.32 39.0168 50.33672 40 49.124001 40 c
47.911282 40 46.928001 39.01672 46.928001 37.804001 c
46.928001 21.608002 l
46.928001 20.395203 47.911282 19.412003 49.124001 19.412003 c
50.231102 19.412003 51.1441 20.231962 51.295601 21.297003 c
52.972603 20.111403 55.016602 19.412003 57.222 19.412003 c
57.222 19.412001 l
h
75.014999 27.51 m
78.458397 27.51 81.260201 30.3116 81.260201 33.755199 c
81.260201 37.198799 78.458603 40.000401 75.014999 40.000401 c
66.917 40.000401 l
65.704201 40.000401 64.721001 39.01712 64.721001 37.804401 c
64.721001 36.591682 65.704277 35.608402 66.917 35.608402 c
75.014999 35.608402 l
76.036697 35.608402 76.867897 34.777203 76.867897 33.755501 c
76.867897 32.733799 76.036697 31.902601 75.014999 31.902601 c
66.917 31.902601 l
63.473598 31.902601 60.671799 29.101002 60.671799 25.657402 c
60.671799 22.213802 63.4734 19.412201 66.917 19.412201 c
75.014999 19.412201 l
76.227798 19.412201 77.210999 20.395481 77.210999 21.6082 c
77.210999 22.820919 76.227722 23.804199 75.014999 23.804199 c
66.917 23.804199 l
65.895302 23.804199 65.064102 24.635399 65.064102 25.657099 c
65.064102 26.678799 65.895302 27.509998 66.917 27.509998 c
75.014999 27.509998 l
75.014999 27.51 l
h
102.809998 36.250999 m
103.667557 37.108559 103.667557 38.499199 102.809723 39.356499 c
102.38092 39.785297 101.818764 39.99966 101.256821 39.99966 c
100.694618 39.99966 100.132721 39.785282 99.703918 39.356499 c
98.667618 38.320198 l
97.03212 39.380898 95.084717 39.999599 92.994415 39.999599 c
87.227615 39.999599 82.535416 35.307598 82.535416 29.5406 c
82.535416 22.4582 l
82.535416 16.691401 87.227417 11.999201 92.994415 11.999201 c
98.761414 11.999201 103.453415 16.6912 103.453415 22.4582 c
103.453415 29.5406 l
103.453415 31.631001 102.834656 33.578598 101.774017 35.214199 c
102.809998 36.250999 l
h
92.995003 35.607601 m
93.864639 35.607601 94.691101 35.422359 95.439705 35.09132 c
91.442307 31.093719 l
90.584747 30.23616 90.584747 28.84572 91.442307 27.988119 c
92.30043 27.13056 93.690804 27.13056 94.548103 27.988119 c
98.545502 31.985519 l
98.876282 31.2372 99.061584 30.41062 99.061584 29.541019 c
99.061584 22.45862 l
99.061584 19.11342 96.340088 16.391819 92.994781 16.391819 c
89.649475 16.391819 86.927979 19.113319 86.927979 22.458618 c
86.927979 29.541018 l
86.927979 32.886219 89.649475 35.607819 92.994781 35.607819 c
92.995003 35.607601 l
h
123.512001 19.412001 m
124.7248 19.412001 125.708 20.395281 125.708 21.608002 c
125.708 29.706001 l
125.708 35.382401 121.090401 40 115.414001 40 c
109.737602 40 105.120003 35.382401 105.120003 29.706001 c
105.120003 21.608002 l
105.120003 20.395203 106.103279 19.412003 107.316002 19.412003 c
108.528725 19.412003 109.512001 20.395283 109.512001 21.608002 c
109.512001 29.706001 l
109.512001 32.9603 112.159599 35.608002 115.414001 35.608002 c
118.668404 35.608002 121.316002 32.960403 121.316002 29.706001 c
121.316002 21.608002 l
121.316002 20.395203 122.299278 19.412003 123.512001 19.412003 c
123.512001 19.412001 l
h
129.580002 19.412001 m
130.792801 19.412001 131.776001 20.395281 131.776001 21.608002 c
131.776001 37.804001 l
131.776001 39.0168 130.792725 40 129.580002 40 c
128.367279 40 127.384003 39.01672 127.384003 37.804001 c
127.384003 21.608002 l
127.384003 20.395203 128.367279 19.412003 129.580002 19.412003 c
129.580002 19.412001 l
h
127.551399 15.036 m
127.496513 14.904241 127.455345 14.7642 127.427879 14.6242 c
127.397682 14.4842 127.383972 14.33869 127.383972 14.19596 c
127.383972 14.05323 127.397682 13.90772 127.427879 13.76772 c
127.455338 13.62772 127.496513 13.487721 127.551399 13.35596 c
127.606285 13.224199 127.674919 13.09518 127.754517 12.97713 c
127.834122 12.85635 127.924713 12.74381 128.026276 12.64225 c
128.127838 12.54069 128.240372 12.4501 128.36116 12.37049 c
128.479218 12.290882 128.608231 12.22225 128.73999 12.16737 c
128.87175 12.11249 129.011749 12.071314 129.151749 12.04385 c
129.865463 11.89834 130.623154 12.134438 131.133743 12.64229 c
131.232574 12.74385 131.325897 12.85639 131.405502 12.97717 c
131.485107 13.09522 131.553741 13.22424 131.608627 13.356 c
131.663513 13.48776 131.704681 13.62776 131.732147 13.76776 c
131.762344 13.907761 131.776062 14.05327 131.776062 14.196 c
131.776062 14.33873 131.762344 14.484241 131.732147 14.62424 c
131.704681 14.76424 131.663513 14.90424 131.608627 15.036 c
131.553741 15.167761 131.485107 15.296781 131.405502 15.41483 c
131.325897 15.53561 131.232574 15.64815 131.133743 15.74971 c
131.032181 15.85127 130.919647 15.94186 130.798859 16.021469 c
130.680801 16.101078 130.551788 16.169708 130.420029 16.224588 c
130.288269 16.279469 130.14827 16.320644 130.00827 16.348108 c
129.868271 16.378303 129.722763 16.392016 129.580032 16.392016 c
129.437302 16.392016 129.291794 16.378303 129.151794 16.348108 c
129.011795 16.320648 128.871796 16.279476 128.740036 16.224588 c
128.608276 16.169701 128.479263 16.101069 128.361206 16.021469 c
128.240433 15.941861 128.127884 15.851269 128.026321 15.749709 c
127.924759 15.648149 127.834175 15.535609 127.754562 15.414829 c
127.674957 15.29678 127.606323 15.167759 127.551445 15.035999 c
127.551399 15.036 l
h
151.880005 35.608002 m
153.092804 35.608002 154.076004 36.591282 154.076004 37.804001 c
154.076004 39.01672 153.092728 40 151.880005 40 c
135.684006 40 l
134.795959 40 133.995499 39.464722 133.655411 38.644199 c
133.315323 37.823677 133.503067 36.879101 134.131165 36.250999 c
146.578171 23.804001 l
135.684174 23.804001 l
134.471375 23.804001 133.488174 22.820721 133.488174 21.608002 c
133.488174 20.395283 134.471451 19.412003 135.684174 19.412003 c
151.880173 19.412003 l
152.768219 19.412003 153.56868 19.947283 153.908768 20.767803 c
154.248856 21.588324 154.061111 22.532904 153.433014 23.161003 c
140.986008 35.608002 l
151.880005 35.608002 l
h
157.947998 12 m
159.160797 12 160.143997 12.98328 160.143997 14.196 c
160.143997 30.391998 l
160.143997 31.604797 159.160721 32.587997 157.947998 32.587997 c
156.735275 32.587997 155.751999 31.604717 155.751999 30.391998 c
155.751999 14.195999 l
155.751999 12.983199 156.735275 11.999999 157.947998 11.999999 c
157.947998 12 l
h
159.976807 36.964001 m
160.031693 37.09576 160.072983 37.235802 160.100983 37.375801 c
160.13118 37.5158 160.144897 37.661312 160.144897 37.804043 c
160.144897 38.383244 159.911301 38.948742 159.499542 39.357742 c
159.400986 39.459301 159.288177 39.549892 159.167389 39.629501 c
159.049332 39.70911 158.920319 39.77774 158.788559 39.832623 c
158.657074 39.887508 158.5168 39.92868 158.376801 39.956142 c
158.236801 39.986336 158.091293 40.00005 157.948563 40.00005 c
157.805557 40.00005 157.660324 39.98634 157.52005 39.956142 c
157.380051 39.92868 157.240051 39.887512 157.108292 39.832623 c
156.976532 39.777733 156.847778 39.709103 156.729462 39.629501 c
156.608688 39.549892 156.49614 39.459301 156.394577 39.357742 c
155.985535 38.948704 155.752213 38.383221 155.752213 37.803944 c
155.752213 37.661205 155.76593 37.515705 155.796387 37.375702 c
155.823578 37.235703 155.865021 37.095703 155.919632 36.963943 c
155.974518 36.832184 156.043152 36.703163 156.122757 36.585114 c
156.202362 36.464333 156.292953 36.351795 156.394516 36.250233 c
156.496078 36.14867 156.608902 36.058083 156.729401 35.978474 c
156.847717 35.898865 156.976746 35.830235 157.108231 35.775352 c
157.23999 35.720467 157.37999 35.679295 157.519989 35.651833 c
157.802734 35.594177 158.093994 35.594177 158.376434 35.651833 c
158.516434 35.679295 158.656708 35.720463 158.788193 35.775352 c
158.920227 35.830238 159.048965 35.898872 159.167023 35.978474 c
159.287796 36.058083 159.40062 36.148674 159.499176 36.250233 c
159.600739 36.351791 159.694061 36.464333 159.773666 36.585114 c
159.853271 36.703163 159.921906 36.832184 159.976791 36.963943 c
159.976807 36.964001 l
h
f
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%EOF
